---
# Test quickly with:
# oc delete ns minimal-3csivol && oc create -f ./tests/e2e/sample-applications/minimal-3csivol/list.yaml && oc wait --for condition=available deployment/minimal-3csivol --timeout -1h && oc logs deploy/minimal-3csivol -f;

# namespace minimal-3csivol
apiVersion: v1
kind: Namespace
metadata:
  name: minimal-3csivol
---
# test deployment with 8 volumeMounts, 8 volumes, 8 PVCs.
# container mounts 8 PVC volumes.
# Appends current time to each volume ./$(date +%s).txt once if does not exists.
# Continuously cat each file in volume to stdout.
# container echoes the contents of each volume to stdout.
# Note: If you see deployment stuck with this error: pods "minimal-3csivol-59f59dd6fc-lhc5k" is forbidden: unable to validate
#        against any security context constraint:
#        [pod.metadata.annotations.container.seccomp.security.alpha.kubernetes.io/alpine:
#        Forbidden: seccomp may not be set provider "anyuid": Forbidden: not
#        usable by user or serviceaccount provider "nonroot": Forbidden: not
#        usable by user or serviceaccount provider "hostmount-anyuid": Forbidden:
#        not usable by user or serviceaccount provider
#        "machine-api-termination-handler": Forbidden: not usable by user or
#        serviceaccount provider "hostnetwork": Forbidden: not usable by user or
#        serviceaccount provider "hostaccess": Forbidden: not usable by user or
#        serviceaccount provider "mssql-persistent-scc": Forbidden: not usable by
#        user or serviceaccount provider "mysql-persistent-scc": Forbidden: not
#        usable by user or serviceaccount provider "node-exporter": Forbidden:
#        not usable by user or serviceaccount provider "privileged": Forbidden:
#        not usable by user or serviceaccount]
# Resolve this issue by executing the command `oc adm policy add-scc-to-user privileged -z default -n minimal-3csivol`
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minimal-3csivol
  namespace: minimal-3csivol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minimal-3csivol
  template:
    metadata:
      labels:
        app: minimal-3csivol
    spec:
      containers:
      - name: alpine
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        image: alpine
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        tty: true
        interactive: true
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            date +%s > /mnt/volume1/$(date +%s).txt
            date +%s > /mnt/volume2/$(date +%s).txt
            date +%s > /mnt/volume3/$(date +%s).txt
            while true; do
              ls -l /mnt/volume*/* | grep -v lost+found | grep -v total
              sleep 1
            done
# Output on initial creation
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume1/1677538986.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume2/1677538986.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume3/1677538986.txt

# If restore works, we would expect to see two files per volume
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume1/1677538986.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:14 /mnt/volume1/1677539648.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume2/1677538986.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:14 /mnt/volume2/1677539648.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:03 /mnt/volume3/1677538986.txt
# -rw-r--r--    1 10012100 10012100        11 Feb 27 23:14 /mnt/volume3/1677539648.txt

        volumeMounts:
        - name: volume1
          mountPath: /mnt/volume1
        - name: volume2
          mountPath: /mnt/volume2
        - name: volume3
          mountPath: /mnt/volume3
      volumes:
      - name: volume1
        persistentVolumeClaim:
          claimName: volume1
      - name: volume2
        persistentVolumeClaim:
          claimName: volume2
      - name: volume3
        persistentVolumeClaim:
          claimName: volume3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume1
  namespace: minimal-3csivol
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume2
  namespace: minimal-3csivol
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume3
  namespace: minimal-3csivol
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
