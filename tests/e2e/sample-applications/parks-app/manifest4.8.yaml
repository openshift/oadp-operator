apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: parks-app
  
  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: restify
      namespace: parks-app
      labels:
        app: restify
    spec: {}
    status:
      dockerImageRepository: ''
  
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: restify
      namespace: parks-app
      labels:
        app: restify
    spec:
      triggers:
      - type: GitHub
        github:
          secret: 4Xwu0tyAab90aaoasd88qweAasdaqvjknfrl3qwpo
      - type: Generic
        generic:
          secret: 4Xwu0tyAab90aaoasd88qweAasdaqvjknfrl3qwpo
      - type: ConfigChange
      - type: ImageChange
        imageChange: {}
      source:
        type: Git
        git:
          uri: https://github.com/ryanj/restify-mongodb-parks
          ref: master
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: nodejs:10-ubi8
      output:
        to:
          kind: ImageStreamTag
          name: "restify:latest"
      resources: {}
    status:
      lastVersion: 0
    
    
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: restify
      namespace: parks-app
      labels:
        app: restify
    spec:
      strategy:
        resources: {}
      triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - restify
          from:
            kind: ImageStreamTag
            name: "restify:latest"
      replicas: 1
      selector:
        app: restify
        deploymentconfig: restify
      template:
        metadata:
          creationTimestamp: 
          labels:
            e2e-app: "true"
            app: restify
            deploymentconfig: restify
        spec:
          volumes:
          - name: "restify-volume-1"
            emptyDir: {}
          containers:
          - name: restify
            image: library/restify:latest
            ports:
            - containerPort: 8080
              protocol: TCP
            env:
            - name: DATABASE_SERVICE_NAME
              value: mongodb
            - name: MONGODB_DATABASE
              value: restify-database
            - name: MONGODB_PASSWORD
              value: mongo-user-password
            - name: MONGODB_USER
              value: mongo-user-1
            resources: {}
            volumeMounts:
            - name: "restify-volume-1"
              mountPath: "/run"
    status: {}
    
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: restify
      namespace: parks-app
      labels:
        app: restify
    spec:
      to:
        kind: Service
        name: restify
      port:
        targetPort: '8080'
    status: {}
    
  - kind: Service
    apiVersion: v1
    metadata:
      name: restify
      namespace: parks-app
      labels:
        app: restify
    spec:
      ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      selector:
        app: restify
        deploymentconfig: restify
    status:
      loadBalancer: {}
    
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: mongodb
      namespace: parks-app
    spec:
      strategy:
        type: Recreate
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - mongodb-container
          from:
            kind: ImageStreamTag
            name: mongodb:latest
            namespace: openshift
      - type: ConfigChange
      replicas: 1
      selector:
        name: mongodb
      template:
        metadata:
          labels:
            e2e-app: "true"
            name: mongodb
        spec:
          containers:
          - name: mongodb-container
            image: " "
            ports:
            - containerPort: 27017
              protocol: TCP
            env:
            - name: MONGODB_USER
              value: mongo-user-1
            - name: MONGODB_PASSWORD
              value: mongo-user-password
            - name: MONGODB_DATABASE
              value: restify-database
            - name: MONGODB_ADMIN_PASSWORD
              value: moogo-admin-pass
            volumeMounts:
            - name: mongodb-data
              mountPath: /data/db"
            imagePullPolicy: Always
          volumes:
          - name: mongodb-data
            persistentVolumeClaim:
              claimName: mongodb-data-claim
          restartPolicy: Always
    
  - kind: Service
    apiVersion: v1
    metadata:
      name: mongodb
      namespace: parks-app
    spec:
      ports:
      - name: mongo
        protocol: TCP
        port: 27017
        targetPort: 27017
      selector:
        name: mongodb
      portalIP: ''
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
    
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: "mongodb-data-claim"
      namespace: parks-app
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    
